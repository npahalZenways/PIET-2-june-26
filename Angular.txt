gulp/grunt
	- task runner
webpack
	- module bundler
webpack-dev-server
	- development server
======================================================================
Angular cli commands
ng new app-name - to create a new app

ng serve - to start an angular application and host it onto a local server

ng generate component component-name - to generate a new component

ng generate pipe pipe-name - to generate a new pipe

ng generate service service_name - to generate a new service

ng generate guard guard_name - to generate a guard

ng generate module module_name - to generate a module

========================================================================
@NgModule decorator
imports - array - define modules
provider - array - services
declarations - array - remaining things

bootstrap - array - initial components
exports - array - exported things
entryComponents - array - components which should be initiated instantly

class - module
=========================================================================
@Component
selector - string - selects defined string in application and create an instance of component there with its view/template
template - string - html code
templateUrl - string - html file url
styles - array - e.g - '.active{ color: red}', 'p{ color: blue }'
styleUrls - array - array of style sheets's url

class - component

=========================================================================

Data-binding

	1. One-way binding
		- interpolation {{ property_name }}
			component ====> View
		- property binding [src]="property_name"
			component ====> View
		- event binding (event_name)="expression"
			View ====> Component

	2. Two-way binding
		Component <====> View

==========================================================================

In-built-directives

	1. Structural directives - works structure, i.e., create or remove the structure from DOM
		- *ngIf Then Else
		- *ngFor Of
		- ngSwitch - *ngSwitchCase - *ngSwitchDefault
	2. Attribute directives - works on appearance or values of elements
		- ngModel
		- ngClass
		- ngNonBindable

===========================================================================

Data-sharing between parent and child components

	Input - sending data from parent component to child component
		- here we use property binding on child component's instance
	Output - getting data from child component into parent component
		- here we use event binding on child component's instance

===========================================================================
Pipes

Used to change the view value, ( | ) pipe operator

@Pipe decorator - used to make a class behave as a Pipe

PipeTransform interface - to provide transform method

===========================================================================
Services
	- to make re-usable code or data-sharing between non-linked components

@Injectable() decorator
	- make a class behave as a service

dependency injection

providers - how this service is going to work

providing a service - can be provided in multiple locations
	- Component decorator - providers array or ViewProviders array
	- Directive decorator - providers array
	- NgModule decorator - providers array

===========================================================================
Lifecycle hooks

ngOnChanges() - to check changes two-way data-binding
ngOnInit() -  on initialisation of component
ngDoChecked() - on checking non-angular things
ngAfterContentInit() - after content initialisation 
ngAfterContentChecked() - after content checked
ngAfterViewInit() - after view initialisation 
ngAfterViewChecked() - after view checked
ngOnDestroy() - just before destroying the class

===========================================================================

Forms

states
	- Untouched
	- Touched
	- Pristine
	- Dirty
	- Invalid
	- Valid